{{- if and (include "gitlabUrl" .) (or (default "" .Values.runnerRegistrationToken) (default "" .Values.runnerToken))  }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ if .Values.rbac.create }}{{ template "fullname" . }}{{ else }}"{{ .Values.rbac.serviceAccountName }}"{{ end }}
      containers:
      - name: {{ template "fullname" . }}
        image: {{ .Values.image }}
        {{- if and .Values.unregisterRunners .Values.runnerRegistrationToken }}
        lifecycle:
          preStop:
            exec:
              command: ["gitlab-runner", "unregister", "--all-runners"]
        {{- end }}
        imagePullPolicy: {{ default "" .Values.imagePullPolicy | quote }}
        command: ["/bin/bash", "/scripts/entrypoint"]
        env:
        - name: CI_SERVER_URL
          value: {{ template "gitlabUrl" . }}
        - name: CI_SERVER_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: runner-token
        - name: REGISTRATION_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: runner-registration-token
        - name: KUBERNETES_IMAGE
          value: {{ .Values.runners.image | quote }}
        {{ if .Values.runners.privileged }}
        - name: KUBERNETES_PRIVILEGED
          value: "true"
        {{ end }}
        - name: KUBERNETES_NAMESPACE
          value: {{ default .Release.Namespace .Values.runners.namespace | quote }}
        - name: KUBERNETES_CPU_LIMIT
          value: {{ default "" .Values.runners.builds.cpuLimit | quote }}
        - name: KUBERNETES_MEMORY_LIMIT
          value: {{ default "" .Values.runners.builds.memoryLimit | quote }}
        - name: KUBERNETES_CPU_REQUEST
          value: {{ default "" .Values.runners.builds.cpuRequests | quote }}
        - name: KUBERNETES_MEMORY_REQUEST
          value: {{ default "" .Values.runners.builds.memoryRequests| quote }}
        - name: KUBERNETES_SERVICE_CPU_LIMIT
          value: {{ default "" .Values.runners.services.cpuLimit | quote }}
        - name: KUBERNETES_SERVICE_MEMORY_LIMIT
          value: {{ default "" .Values.runners.services.memoryLimit | quote }}
        - name: KUBERNETES_SERVICE_CPU_REQUEST
          value: {{ default "" .Values.runners.services.cpuRequests | quote }}
        - name: KUBERNETES_SERVICE_MEMORY_REQUEST
          value: {{ default "" .Values.runners.services.memoryRequests | quote }}
        - name: KUBERNETES_HELPERS_CPU_LIMIT
          value: {{ default "" .Values.runners.helpers.cpuLimit | quote }}
        - name: KUBERNETES_HELPERS_MEMORY_LIMIT
          value: {{ default "" .Values.runners.helpers.memoryLimit | quote }}
        - name: KUBERNETES_HELPERS_CPU_REQUEST
          value: {{ default "" .Values.runners.helpers.cpuRequests | quote }}
        - name: KUBERNETES_HELPERS_MEMORY_REQUEST
          value: {{ default "" .Values.runners.helpers.memoryRequests | quote }}
        {{- if .Values.runners.cache -}}
        {{ include "cache_s3" . | indent 8 }}
        {{- end }}
        livenessProbe:
          exec:
            command: ["/usr/bin/pgrep","gitlab.*runner"]
          initialDelaySeconds: 60
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command: ["/usr/bin/pgrep","gitlab.*runner"]
          initialDelaySeconds: 10
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: scripts
          mountPath: /scripts
        {{- if .Values.certsSecretName }}
        - name: custom-certs
          readOnly: true
          mountPath: /etc/gitlab-runner/certs/
        {{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
      volumes:
      {{ if .Values.runners.privileged }}
      - name: var-run-docker-sock
        hostPath:
          path: /var/run/docker.sock
      {{ end }}
      {{- if .Values.certsSecretName }}
      - name: custom-certs
        secret:
          secretName: {{ .Values.certsSecretName }}
      {{- end }}
      - name: scripts
        configMap:
          name: {{ template "fullname" . }}
{{ else }}
{{ end }}
